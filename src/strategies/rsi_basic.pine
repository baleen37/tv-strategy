//@version=6
strategy("RSI Basic Strategy", overlay=true, initial_capital=10000, commission_type=strategy.commission.percent, commission_value=0.1)

//==============================================================================
// RSI BASIC STRATEGY - Pine Script v6
//==============================================================================
// Simple RSI-based momentum strategy for cryptocurrency trading.
//
// Strategy Logic:
// - Enter long when RSI crosses above oversold level (30)
// - Exit long when RSI crosses below overbought level (70)
// - Risk management with stop loss and take profit
// - Position sizing and commission handling
//
// Features:
// - Pine Script v6 compliance
// - Configurable RSI parameters
// - Risk management (2% stop loss, 4% take profit)
// - Professional visualization
// - Performance tracking
//==============================================================================

//------------------------------------------------------------------------------
// INPUT PARAMETERS
//------------------------------------------------------------------------------

// RSI Configuration
rsi_period = input.int(14, title="RSI Period", minval=5, maxval=50, tooltip="Number of periods for RSI calculation")
oversold_level = input.int(30, title="RSI Oversold Level", minval=10, maxval=40, tooltip="RSI level for buy signals")
overbought_level = input.int(70, title="RSI Overbought Level", minval=60, maxval=90, tooltip="RSI level for sell signals")

// Risk Management
stop_loss_pct = input.float(2.0, title="Stop Loss %", minval=0.5, maxval=10.0, step=0.1, tooltip="Stop loss percentage")
take_profit_pct = input.float(4.0, title="Take Profit %", minval=1.0, maxval=20.0, step=0.1, tooltip="Take profit percentage")

// Position Management
position_size_pct = input.float(90.0, title="Position Size %", minval=10.0, maxval=100.0, step=5.0, tooltip="Percentage of available capital to use")

//------------------------------------------------------------------------------
// VALIDATION
//------------------------------------------------------------------------------

// Ensure proper risk/reward ratio
risk_reward_ratio = take_profit_pct / stop_loss_pct
if risk_reward_ratio < 1.5
    runtime.error("Risk/Reward ratio must be at least 1.5:1 for proper risk management")

// Validate RSI levels
if oversold_level >= 50 or overbought_level <= 50
    runtime.error("Invalid RSI levels: oversold must be < 50, overbought must be > 50")

//------------------------------------------------------------------------------
// INDICATOR CALCULATIONS
//------------------------------------------------------------------------------

// Calculate RSI
rsi_value = ta.rsi(close, rsi_period)

//------------------------------------------------------------------------------
// ENTRY AND EXIT CONDITIONS
//------------------------------------------------------------------------------

// Entry conditions
long_entry = ta.crossover(rsi_value, oversold_level)

// Exit conditions
long_exit = ta.crossunder(rsi_value, overbought_level)

//------------------------------------------------------------------------------
// RISK MANAGEMENT CALCULATIONS
//------------------------------------------------------------------------------

// Calculate stop loss and take profit prices
long_stop_loss = strategy.position_avg_price * (1 - stop_loss_pct / 100)
long_take_profit = strategy.position_avg_price * (1 + take_profit_pct / 100)

//------------------------------------------------------------------------------
// POSITION SIZING
//------------------------------------------------------------------------------

// Calculate position size based on available capital
calculate_position_size() =>
    available_capital = strategy.equity * (position_size_pct / 100)
    quantity = available_capital / close
    quantity

//------------------------------------------------------------------------------
// STRATEGY EXECUTION
//------------------------------------------------------------------------------

// Enter long position
if long_entry and strategy.position_size == 0
    qty = calculate_position_size()
    strategy.entry("RSI Long", strategy.long, qty=qty, comment="RSI Buy @ " + str.tostring(math.round(close, 2)))

// Exit long position with stop loss and take profit
if strategy.position_size > 0
    strategy.exit("Exit Long", "RSI Long", stop=long_stop_loss, limit=long_take_profit, comment="SL/TP Exit")

// Exit on opposite signal
if long_exit and strategy.position_size > 0
    strategy.close("RSI Long", comment="RSI Sell @ " + str.tostring(math.round(close, 2)))

//------------------------------------------------------------------------------
// VISUALIZATION
//------------------------------------------------------------------------------

// Plot RSI with color coding
rsi_color = rsi_value > overbought_level ? color.red :
           rsi_value < oversold_level ? color.green : color.blue

plot(rsi_value, title="RSI", color=rsi_color, linewidth=2)

// RSI reference lines
hline(overbought_level, "Overbought", color=color.red, linestyle=hline.style_dashed, linewidth=1)
hline(oversold_level, "Oversold", color=color.green, linestyle=hline.style_dashed, linewidth=1)
hline(50, "Midline", color=color.gray, linestyle=hline.style_dotted, linewidth=1)

// Background shading for RSI zones
bgcolor(rsi_value > overbought_level ? color.new(color.red, 90) :
        rsi_value < oversold_level ? color.new(color.green, 90) : na,
        title="RSI Zones")

// Entry and exit signals on chart
plotshape(long_entry, title="Buy Signal", style=shape.triangleup, location=location.belowbar,
          color=color.green, size=size.small, text="BUY")

plotshape(long_exit, title="Sell Signal", style=shape.triangledown, location=location.abovebar,
          color=color.red, size=size.small, text="SELL")

// Plot stop loss and take profit levels
plot(strategy.position_size > 0 ? long_stop_loss : na, title="Stop Loss", color=color.red,
     linewidth=1, style=plot.style_stepline)

plot(strategy.position_size > 0 ? long_take_profit : na, title="Take Profit", color=color.green,
     linewidth=1, style=plot.style_stepline)

//------------------------------------------------------------------------------
// INFORMATION DISPLAY
//------------------------------------------------------------------------------

// Create information table
if barstate.islast
    var table info_table = table.new(position.top_right, 2, 8, bgcolor=color.white, border_width=1)

    // Header
    table.cell(info_table, 0, 0, "RSI Strategy", text_color=color.black, text_size=size.normal, bgcolor=color.gray)
    table.cell(info_table, 1, 0, "Status", text_color=color.black, text_size=size.normal, bgcolor=color.gray)

    // Current RSI
    table.cell(info_table, 0, 1, "RSI Value", text_color=color.black, text_size=size.small)
    rsi_display_color = rsi_value > overbought_level ? color.red :
                       rsi_value < oversold_level ? color.green : color.blue
    table.cell(info_table, 1, 1, str.tostring(math.round(rsi_value, 2)), text_color=rsi_display_color, text_size=size.small)

    // Position status
    table.cell(info_table, 0, 2, "Position", text_color=color.black, text_size=size.small)
    position_text = strategy.position_size > 0 ? "LONG" : "FLAT"
    position_color = strategy.position_size > 0 ? color.green : color.gray
    table.cell(info_table, 1, 2, position_text, text_color=position_color, text_size=size.small)

    // Entry price
    table.cell(info_table, 0, 3, "Entry Price", text_color=color.black, text_size=size.small)
    entry_price_text = strategy.position_size > 0 ? str.tostring(math.round(strategy.position_avg_price, 2)) : "---"
    table.cell(info_table, 1, 3, entry_price_text, text_color=color.black, text_size=size.small)

    // Risk levels
    table.cell(info_table, 0, 4, "Stop Loss", text_color=color.black, text_size=size.small)
    sl_text = strategy.position_size > 0 ? str.tostring(math.round(long_stop_loss, 2)) : "---"
    table.cell(info_table, 1, 4, sl_text, text_color=color.red, text_size=size.small)

    table.cell(info_table, 0, 5, "Take Profit", text_color=color.black, text_size=size.small)
    tp_text = strategy.position_size > 0 ? str.tostring(math.round(long_take_profit, 2)) : "---"
    table.cell(info_table, 1, 5, tp_text, text_color=color.green, text_size=size.small)

    // Performance metrics
    table.cell(info_table, 0, 6, "Total Trades", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 6, str.tostring(strategy.closedtrades), text_color=color.black, text_size=size.small)

    table.cell(info_table, 0, 7, "Win Rate", text_color=color.black, text_size=size.small)
    win_rate = strategy.closedtrades > 0 ? math.round(strategy.wintrades / strategy.closedtrades * 100, 1) : 0
    win_rate_color = win_rate >= 50 ? color.green : color.red
    table.cell(info_table, 1, 7, str.tostring(win_rate) + "%", text_color=win_rate_color, text_size=size.small)

//------------------------------------------------------------------------------
// ALERTS
//------------------------------------------------------------------------------

// Entry alert
alertcondition(long_entry, title="RSI Long Entry",
               message="RSI Long Entry Signal: {{ticker}} @ {{close}} | RSI: " + str.tostring(math.round(rsi_value, 2)))

// Exit alert
alertcondition(long_exit, title="RSI Long Exit",
               message="RSI Long Exit Signal: {{ticker}} @ {{close}} | RSI: " + str.tostring(math.round(rsi_value, 2)))

// Risk management alerts
alertcondition(ta.crossunder(close, long_stop_loss), title="Stop Loss Hit",
               message="Stop Loss Triggered: {{ticker}} @ {{close}}")

alertcondition(ta.crossover(close, long_take_profit), title="Take Profit Hit",
               message="Take Profit Triggered: {{ticker}} @ {{close}}")

//==============================================================================
// STRATEGY NOTES
//==============================================================================
//
// Configuration Recommendations:
// - RSI Period: 14 (standard)
// - Oversold: 30 (conservative entry)
// - Overbought: 70 (conservative exit)
// - Stop Loss: 2% (tight risk control)
// - Take Profit: 4% (2:1 risk/reward)
// - Position Size: 90% (high conviction)
//
// Best Timeframes:
// - 1H, 4H, 1D for swing trading
// - 15M, 30M for day trading
//
// Market Conditions:
// - Works best in trending markets with pullbacks
// - May generate false signals in choppy/sideways markets
// - Consider additional filters for improvement
//
//==============================================================================
